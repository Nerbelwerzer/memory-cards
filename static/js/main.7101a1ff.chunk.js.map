{"version":3,"sources":["components/ImageBoard.js","components/ScoreBoard.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["ImageBoard","props","useState","image","alt","clicked","images","setImages","shuffleImages","shuffle","resetImages","forEach","img","className","map","i","onClick","index","gameOver","addPoint","src","ScoreBoard","score","highScore","Header","App","setScore","setHighScore","setGameOver","useEffect","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAmDeA,MAhDf,SAAoBC,GAAQ,IAAD,EACGC,mBAAS,CACnC,CAAEC,MAAO,iBAAkBC,IAAK,IAAKC,SAAS,GAC9C,CAAEF,MAAO,iBAAkBC,IAAK,IAAKC,SAAS,GAC9C,CAAEF,MAAO,iBAAkBC,IAAK,IAAKC,SAAS,GAC9C,CAAEF,MAAO,iBAAkBC,IAAK,IAAKC,SAAS,GAC9C,CAAEF,MAAO,iBAAkBC,IAAK,IAAKC,SAAS,GAC9C,CAAEF,MAAO,iBAAkBC,IAAK,IAAKC,SAAS,GAC9C,CAAEF,MAAO,iBAAkBC,IAAK,IAAKC,SAAS,GAC9C,CAAEF,MAAO,iBAAkBC,IAAK,IAAKC,SAAS,GAC9C,CAAEF,MAAO,iBAAkBC,IAAK,IAAKC,SAAS,GAC9C,CAAEF,MAAO,kBAAmBC,IAAK,KAAMC,SAAS,GAChD,CAAEF,MAAO,kBAAmBC,IAAK,KAAMC,SAAS,GAChD,CAAEF,MAAO,kBAAmBC,IAAK,KAAMC,SAAS,KAbzB,mBAClBC,EADkB,KACVC,EADU,KA2BnBC,EAAgB,WACpBD,EAAU,YAAIE,IAAQH,MAGlBI,EAAc,WAClBJ,EAAOK,SAAQ,SAACC,GACdA,EAAIP,SAAU,MAIlB,OACE,qBAAKQ,UAAU,WAAf,SACIP,EAAOQ,KAAI,SAACF,EAAKG,GAAN,OACX,qBAAKF,UAAU,UAAUG,QAAS,kBAvBjCV,EADcW,EAwBqCF,GAvBrCV,SAIjBK,IACAT,EAAMiB,UAAS,KAJfjB,EAAMkB,WACNZ,EAAUD,EAAOW,GAAOZ,SAAU,SAKpCG,IARkB,IAACS,GAwBf,SACE,qBAAKG,IAAKR,EAAIT,MAAOC,IAAKQ,EAAIR,cC9BzBiB,EAZI,SAACpB,GAElB,OACE,8BACE,sBAAKY,UAAU,aAAf,UACE,0CAAaZ,EAAMqB,SACnB,yCAAYrB,EAAMsB,mBCOXC,MAbf,WACE,OACE,8BACE,yBAAQX,UAAU,aAAlB,UACE,wCACA,mBAAGA,UAAU,aAAb,mEC2COY,EA7CH,WAAO,IAAD,EACUvB,mBAAS,GADnB,mBACToB,EADS,KACFI,EADE,OAEkBxB,mBAAS,GAF3B,mBAETqB,EAFS,KAEEI,EAFF,OAGgBzB,oBAAS,GAHzB,mBAGTgB,EAHS,KAGCU,EAHD,KAKhBC,qBAAU,WACJX,IACFY,MAAM,YACNJ,EAAS,GACTE,GAAY,MAEb,CAACV,IAEJW,qBAAU,WACM,KAAVP,IACFQ,MAAM,YACNJ,EAAS,MAEV,CAACJ,IAEJO,qBAAU,WACJP,EAAQC,GACVI,EAAaL,KAEd,CAACA,EAAOC,IAMX,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACED,MAAQA,EACRC,UAAYA,IAEd,cAAC,EAAD,CACEJ,SAZW,WACfO,EAASJ,EAAQ,IAYbJ,SAAWU,QChCJG,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7101a1ff.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport shuffle from 'shuffle-array'\n\nfunction ImageBoard(props) {\n  const [images, setImages] = useState([\n    { image: './assets/1.jpg', alt: '1', clicked: false },\n    { image: './assets/2.jpg', alt: '2', clicked: false },\n    { image: './assets/3.jpg', alt: '3', clicked: false },\n    { image: './assets/4.jpg', alt: '4', clicked: false },\n    { image: './assets/5.jpg', alt: '5', clicked: false },\n    { image: './assets/6.jpg', alt: '6', clicked: false },\n    { image: './assets/7.jpg', alt: '7', clicked: false },\n    { image: './assets/8.jpg', alt: '8', clicked: false },\n    { image: './assets/9.jpg', alt: '9', clicked: false },\n    { image: './assets/10.jpg', alt: '10', clicked: false },\n    { image: './assets/11.jpg', alt: '11', clicked: false },\n    { image: './assets/12.jpg', alt: '12', clicked: false }\n  ])\n\n  const handleClick = (index) => {\n    if (!images[index].clicked) {\n      props.addPoint()\n      setImages(images[index].clicked = true);\n    } else {\n      resetImages()\n      props.gameOver(true)\n    }\n    shuffleImages();\n  }\n\n  const shuffleImages = () => {\n    setImages([...shuffle(images)])\n  }\n\n  const resetImages = () => {\n    images.forEach((img) => {\n      img.clicked = false\n    })\n  }\n\n  return (\n    <div className=\"imgBoard\">\n      { images.map((img, i) => (\n        <div className=\"imgCard\" onClick={() => handleClick(i)}>\n          <img src={img.image} alt={img.alt} />\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ImageBoard\n","import React from 'react'\n\nconst ScoreBoard = (props) => {\n\n  return (\n    <div>\n      <div className=\"scoreboard\">\n        <div>Score: {props.score}</div>\n        <div>Best: {props.highScore}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default ScoreBoard\n","import React from 'react'\n\nfunction Header() {\n  return (\n    <div>\n      <header className=\"mainHeader\">\n        <h1>Bosch!</h1>\n        <p className=\"subHeading\">\n          ... Click each image only once to win the game!\n        </p>\n      </header>\n    </div>\n  )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport ImageBoard from './components/ImageBoard'\nimport ScoreBoard from './components/ScoreBoard'\nimport Header from './components/Header'\n\nconst App = () => {\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    if (gameOver) {\n      alert('you lose');\n      setScore(0)\n      setGameOver(false)\n    }\n  }, [gameOver])\n\n  useEffect(() => {\n    if (score === 12) {\n      alert('you win!');\n      setScore(0);\n    }\n  }, [score]);\n\n  useEffect(() => {\n    if (score > highScore) {\n      setHighScore(score)\n    }\n  }, [score, highScore])\n\n  const addPoint = () => {\n    setScore(score + 1);\n  }\n\n  return (\n    <div>\n      <Header />\n      <ScoreBoard \n        score={ score } \n        highScore={ highScore } \n      />\n      <ImageBoard \n        addPoint={ addPoint } \n        gameOver={ setGameOver }\n      />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}